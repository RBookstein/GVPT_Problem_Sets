---
title: "Problem Set 5"
subtitle: "Due date: 23 October"
format: 
  html:
    self-contained: true
toc: true
editor: visual
execute: 
  echo: true
---

Please upload your completed assignment to the ELMs course site (under the assignments menu). Remember to include an annotated script file for all work with R and show your math for all other problems (if applicable, or necessary). Please also upload your completed assignment to the Github repository that you have shared with us. *We should be able to run your script with no errors.*

**Total points: 25**

```{r}
library(scales)
```

## Question 1

*Total points: 6*

::: {.callout-tip}
4/6
:::

Use the data in the table below to answer the following questions.

```{r}
#| echo: false

tibble::tibble(
  `Age group` = c("18-24", "25-30", "31 and up", "TOTAL"),
  `Non-voters` = c(70, 40, 220, 330),
  Voters = c(50, 50, 570, 670),
  Total = `Non-voters` + Voters
) |> 
  knitr::kable(caption = "Voting by Age in 2000")
```

### Part A

*Points: 2*

::: {.callout-tip}
2/2
:::

What is the probability of being 25-30 or a non-voter?

```{r}
ages_25_to_30 <- 40
non_voters <- 330
total_sample <- 1000

probability <- (ages_25_to_30 + non_voters) / total_sample

probability
```

From the math above, we find that the probability of being 25-30 or a non-voter is 0.37 or 37 percent.

### Part B

*Points: 4*

::: {.callout-tip}
2/4
:::

Assuming a normal distribution, report the 95% confidence intervals for the percentage of 18-to-24-year-olds who did not vote, and then the percentage of 25-to-30-year-olds who did not vote.

```{r}

confidence_interval <- function (p, n) {
 se <- sqrt(p*(1-p)/n)
 lower_range <- p - 1.96*se
 upper_range <- p + 1.96*se
 return(c(lower_range, upper_range))
}

p_18_to_24 <- 70/120
CI_18_to_24 <- confidence_interval(p_18_to_24, 120)

p_25_to_30 <- 70/120
CI_25_to_30 <- confidence_interval(p_25_to_30, 90)

list(CI_18_to_24 = CI_18_to_24, CI_25_to_30 = CI_25_to_30)

```

::: {.callout-tip} 
The probability that an individual is 18-to-24 and a non-voter is not conditional. Therefore, you look at the proportion of the whole population who meet those criteria.

$$
\hat{p} = Pr(18\ to\ 24 \& NV) = \frac{70}{1000} = 0.07 
$$

And: 

$$
n = 1000
$$

Therefore: 

$$
SE(\hat{p}) = \sqrt{\frac{0.07 * 0.93}{1000}} = 0.008068457
$$

The 95% confidence interval can be found:

$$
\hat{p} \pm 1.96*SE(\hat{p})
$$

Therefore, the 95% confidence interval for the percentage of 18-to-24-year-olds who did not vote is `r percent(0.07 - 1.96 * 0.008068457, accuracy = 0.01)` to `r percent(0.07 + 1.96 * 0.008068457, accuracy = 0.01)`.

Using the same method, the 95% confidence intervals for the percentage of 25-to-30-year-olds who did not vote is `r percent(0.04 - 1.96*0.006196773, accuracy = 0.01)` to `r percent(0.04 + 1.96*0.006196773, accuracy = 0.01)`.
:::

## Question 2

*Total points:* *7*

::: {.callout-tip}
7/7
:::

Assume that the standard deviation for the population distribution of a state in which you want to conduct a poll is 200.

### Part A

*Points: 3*

::: {.callout-tip}
3/3
:::

Calculate the spread of the sampling distribution for each of the following sample sizes: 1, 4, 25, 100, 250, 1000, 5,000, and 10,000.

The spread of the sampling distribution for the following sample sizes are:

```{r}
population_sd <- 200
sample_sizes <- c(1, 4, 25, 100, 250, 1000, 5000, 10000)

standard_errors <- population_sd / sqrt(sample_sizes)

spread <- data.frame(Sample_Sizes = sample_sizes, Standard_Error = standard_errors)

spread
```

### Part B

*Points: 1*

::: {.callout-tip}
1/1
:::

Describe specifically how the variability of the sampling distribution changes as the sample size varies. Considering the expense of running a poll, which sample size do you think is most optimal if conducting the poll?

The variability of the sample distribution changes as the standard error gets larger. The difference between 1 and 4 is 100, as the difference between 5000 and 10000 is less than one. As the sampling distribution gets larger, the difference between the standard error is smaller.

Considering the expenses to run a poll it is unreasonable to say 10000 would be in our price range and that 100-less would not show an accurate picture. Thus, the sample distribution of 1000 would give us a low standard error but not as high amount of individuals to poll which means less costly.

### Part C

*Points: 3*

::: {.callout-tip}
3/3
:::

Display your results graphically (using R) with the sample size on the x-axis and the standard error (of the sampling distribution) on the y-axis.

```{r}
sample_sizes <- c(1, 4, 25, 100, 250, 1000, 5000, 10000)
population_sd <- 200

standard_errors <- population_sd / sqrt(sample_sizes)

plot(sample_sizes, standard_errors, type = "b", 
     xlab = "Sample Size", ylab = "Standard Error",
     main = "Standard Error vs. Sample Size")

abline(h = population_sd, col = "grey", lty = 2)

text(sample_sizes, standard_errors, labels = round(standard_errors, 2), pos = 3)
```

## Question 3

*Points: 4*

::: {.callout-tip}
4/4
:::

Suppose you conduct a survey (to generate a sample mean of interest) and find that it has a margin of error of 4.5 with a sample size of 900 using a 95% confidence interval. What would the margin of error be for a 90% confidence interval?

```{r}
z_95 <- 1.96
ME_95 <- 4.5
z_90 <- 1.645

se <- ME_95/z_95

z_90*se
```

## Question 4

*Points: 4*

::: {.callout-tip}
4/4
:::

Assume that, in State A, the mean income in the population is \$20,000 with a standard deviation of \$2,000. If you took an SRS of 900 individuals from that population, what is the probability that you would get a sample mean income of \$20,200 or greater? What would be the probability if the sample size was only 25?

We must determine the Z score first to continue. 20,000-20,000/(2000/sqrt900) gives us the z score of 900 to be 2.99. 20,000-20,000/(2000/sqrt25) gives us the z score of 25 to be 0.5.

```{r}
probability_900 <- 1-pnorm(2.99)
probability_25 <- 1-pnorm(.5)

probability_900
probability_25
```

With a sample size of 900, the probability of getting a sample mean income of \$20,000 is 0.0013 or 0.13 percent and with a sample size of 25 the probability is 0.3085 or 30.85 percent.

::: callout-note
Assume a normal distribution for both questions.
:::

## Question 5

*Points: 4*

::: {.callout-tip}
2/4
:::

Assume that a coin is fair. If I flip a coin 500 times, what is a 95% confidence interval for the range of the count of heads that I will get? What if I flip the coin 5,000 times? What about 50,000 times?

::: {.callout-tip}
The standard deviation of a binomial distribution (such as a coin flip): 

$$
\sigma_X = \sqrt{np(1-p)}
$$
:::

```{r}
n_500 <- 500
prob500 <- 0.5  

z_500 <- qnorm(0.975)  

CI_95_500 <- c(prob500 - z_500 * sqrt(prob500 * (1 - prob500) / n_500),
            prob500 + z_500 * sqrt(prob500 * (1 - prob500) / n_500))

CI_95_500
```

```{r}
n_5000 <- 5000
prob5000 <- 0.5 

z_5000 <- qnorm(0.975) 

CI_95_5000 <- c(prob5000 - z_5000 * sqrt(prob5000 * (1 - prob5000) / n_5000),
            prob5000 + z_5000 * sqrt(prob5000 * (1 - prob5000) / n_5000))

CI_95_5000
```

```{r}
n_50000 <- 50000
prob50000 <- 0.5 

z_50000 <- qnorm(0.975) 

CI_95_50000 <- c(prob50000 - z_50000 * sqrt(prob50000 * (1 - prob50000) / n_50000),
            prob50000 + z_50000 * sqrt(prob50000 * (1 - prob50000) / n_50000))

CI_95_50000
```

Thus the 95% confidence interval if you flip a coin 500 times is 0.456 - 0.543

The 95% confidence interval if you flip a coin 5000 times is 0.486 - 0.513

The 95% confidence interval if you flip a coin 50000 times is 0.495 - 0.504

::: {.callout-tip}
Almost! The question asks for the confidence interval for the range of the *count* of heads. So, your center point should the number of heads you flipped in these trials. If you have a 50% chance of getting heads when you flip a fair coin, your expected number of heads should be 250, 2,500, and 25,000 heads from each trial. You calculate your confidence around this result. 

```{r}
library(tibble)

p_head <- 0.5

tibble(
  flips = c(500, 5000, 50000),
  expected_n_heads = flips*p_head,
  sd = sqrt(flips*p_head*(1-p_head)),
  lower_ci = expected_n_heads - qnorm(0.975)*sd,
  upper_ci = expected_n_heads + qnorm(0.975)*sd
) |> 
  knitr::kable()
```
:::
